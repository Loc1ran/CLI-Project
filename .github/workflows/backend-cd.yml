name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**
jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17.6
        env:
          POSTGRES_USER: ltt4456
          POSTGRES_PASSWORD: password
          POSTGRES_DB: booking
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'
          cache: 'maven'
      - name: Slack commit message and sha
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":":github: https://github.com/Loc1ran/CLI-Project/commit/${{ github.sha }} - ${{ github.event.head_commit.message }}"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Deployment Started
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Deployment Started"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Slack Message For Building
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Building with Maven"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
      - name: Slack Message For Deployment
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Image tag: ${{steps.build-number.outputs.BUILD_NUMBER}} pushed to ${{ secrets.DOCKERHUB_URL }}"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Update Dockerrun.aws.json api image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat ../Dockerrun.aws.json
          sed -i -E 's_(loctran1213/loctran-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../Dockerrun.aws.json
          echo "Dockerrun.aws.json before updating tag"
          cat ../Dockerrun.aws.json
      - name: Slack Message For Deployment
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Starting Deployment to Elastic Beanstalk"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: ../Dockerrun.aws.json
      - name: Slack Message For Deployment
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Commiting to repo https://github.com/Loc1ran/CLI-Project"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ../Dockerrun.aws.json
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{steps.build-number.outputs.BUILD_NUMBER}}"
          git push
      - name: Slack Message For Deployment
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Deployment and commit completed http://loctran-api-env.eba-p5enpnf2.us-east-1.elasticbeanstalk.com/"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Slack Message For Deployment
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Job Status ${{ job.status }}"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}